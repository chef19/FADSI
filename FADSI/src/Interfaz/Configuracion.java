/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Dibujos.AdicionarGrafo;
import Implementaciones.Direcciones;
import Implementaciones.Enlaces;
import Implementaciones.Grafo;

import Implementaciones.LinkedList;
import Implementaciones.NodoGrafo;
import Implementaciones.Repartidor;
import Implementaciones.TXT;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ANDRES MS
 */
public class Configuracion extends javax.swing.JFrame {

    Grafo GrafoNuevo;
    /**
     * Creates new form Configuracion
     */
    public Configuracion() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cargar_Mapa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ACEPTAR = new javax.swing.JButton();
        CANCELAR = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        PedidosRepartidor = new javax.swing.JTextField();
        Tiempo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        CantidadRepartidores = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Cargar_Mapa.setText("CARGAR");
        Cargar_Mapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cargar_MapaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        jLabel1.setText("CONFIGURACION INICIAL");

        jLabel2.setFont(new java.awt.Font("Snap ITC", 0, 24)); // NOI18N
        jLabel2.setText("MAPA:");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/mensajeria-express.png"))); // NOI18N

        ACEPTAR.setText("ACEPTAR");
        ACEPTAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACEPTARActionPerformed(evt);
            }
        });

        CANCELAR.setText("CANCELAR");
        CANCELAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CANCELARActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Snap ITC", 0, 24)); // NOI18N
        jLabel4.setText("REPARTIDORES:");

        jLabel5.setFont(new java.awt.Font("Snap ITC", 0, 24)); // NOI18N
        jLabel5.setText("TIEMPO:");

        jLabel6.setFont(new java.awt.Font("Snap ITC", 0, 24)); // NOI18N
        jLabel6.setText("# PEDIDOS X REPARTIDOR:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PedidosRepartidor, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(35, 35, 35)
                                .addComponent(Cargar_Mapa, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(CantidadRepartidores, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CANCELAR, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ACEPTAR, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CantidadRepartidores, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(Cargar_Mapa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(38, 38, 38)
                                .addComponent(jLabel4)))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(PedidosRepartidor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CANCELAR, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ACEPTAR, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CANCELARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CANCELARActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_CANCELARActionPerformed

    private void Cargar_MapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cargar_MapaActionPerformed
        // TODO add your handling code here:
        TXT leer = new TXT();
        String file = null;

        JFileChooser dig = new JFileChooser();  //Crea un objeto de dialogo JFileChooser
        dig.setFileFilter(filter);
        int option = dig.showOpenDialog(this);  // Abre la ventana en dialogo
        if (option == JFileChooser.APPROVE_OPTION) {
            file = dig.getSelectedFile().getPath();
        }
        leer.Puntos(file);
        leer.Mapa(file);
        
        GrafoNuevo = new Grafo<Direcciones>();
        int i = 1;
        leer.PUNTOS.goToPos(0);
        while(i < leer.PUNTOS.size()){
            NodoGrafo Nuevo = new NodoGrafo(leer.PUNTOS.getElement());
            GrafoNuevo.Agregar(Nuevo);
            i++;
            leer.PUNTOS.next();
        }
        
        NodoGrafo Temp = (NodoGrafo) GrafoNuevo.Lista.current.element;
        Direcciones Temp2 = (Direcciones) Temp.Dato;
        System.out.println(Temp2.codigo);
        System.out.println(Temp.Relaciones.current.getElemento());
        System.out.println(Temp.Distancias.current.getElemento());
        Temp.Relaciones.next();
        Temp.Distancias.next();
        System.out.println(Temp.Relaciones.current.getElemento());
        System.out.println(Temp.Distancias.current.getElemento());
        System.out.println("/************************");
        GrafoNuevo.Lista.next();
        Temp = (NodoGrafo) GrafoNuevo.Lista.current.element;
        Temp2 = (Direcciones) Temp.Dato;
        System.out.println(Temp2.codigo);
        System.out.println(Temp.Relaciones.current.getElemento());
        System.out.println(Temp.Distancias.current.getElemento());
        Temp.Relaciones.next();
        Temp.Distancias.next();
        System.out.println(Temp.Relaciones.current.getElemento());
        System.out.println(Temp.Distancias.current.getElemento());
        System.out.println("/************************");
        
        
        leer.MAPA.goToPos(0);
        i = 1;
        while(i<leer.MAPA.size()){
            System.out.println("Entra al while de i");
            Enlaces ElementoPuntos = (Enlaces) leer.MAPA.getElement();
            String CodigoEnlace = ElementoPuntos.codigo;
            System.out.println("Codigo Elemento de MAPA: " + ElementoPuntos.codigo);
            LinkedList ListaRelaciones = ElementoPuntos.enlaces;
            System.out.println("Tamaño de ListaRelaciones: " + ElementoPuntos.enlaces.size());
            LinkedList ListaPesos = ElementoPuntos.pesos;
            System.out.println("Tamaño de ListaPesos: " + ElementoPuntos.pesos.size());
            LinkedList ListaAux = GrafoNuevo.Lista;
            int p = 0;
            ListaRelaciones.goToStart();
            ListaPesos.goToStart();
            while (p < ListaRelaciones.size()){
                System.out.println("Entra al while de p");
                int e = 0;
                GrafoNuevo.Lista.goToStart();
                while(e < GrafoNuevo.Lista.size()){
                    System.out.println("Entra al while de e");
                    NodoGrafo ElementoGrafo = (NodoGrafo) GrafoNuevo.Lista.getElement();
                    Direcciones DatoElementoGrafo = (Direcciones) ElementoGrafo.Dato;
                    String CodigodelDato = DatoElementoGrafo.codigo;
                    if(CodigoEnlace.equals(CodigodelDato)){
                        System.out.println("Entra al if 1");
                        int y = 0;
                        ListaAux.goToStart();
                        while(y < ListaAux.size()){
                            System.out.println("Entra al while de y");
                            NodoGrafo ElementoGrafoAux = (NodoGrafo) ListaAux.getElement();
                            Direcciones DatoElementoGrafoaux = (Direcciones) ElementoGrafoAux.Dato;
                            String CodigodelDatoaux = DatoElementoGrafoaux.codigo;
                            System.out.println("Codigo del Dato del grafo aux " + CodigodelDatoaux);
                            System.out.println("Elemento con el que se va a comparar " + ListaRelaciones.getElement());
                            if (CodigodelDatoaux.equals(ListaRelaciones.getElement()+" ")){
                                System.out.println("Entra al if 2");
                                GrafoNuevo.AgregarRelacion(ElementoGrafo, ElementoGrafoAux, Integer.valueOf((String)ListaPesos.getElement()));
                            }
                            System.out.println("next de ListaAux");
                            ListaAux.next();
                            y++;
                        }
                    }
                    System.out.println("next de Lista");
                    GrafoNuevo.Lista.next();
                    e++;
                }
                p++;
                ListaRelaciones.next();
            }
            i++;
            System.out.println("next de MAPA");
            leer.MAPA.next();
            System.out.println("/**************************************************");
            
        }
        System.out.println("Se termino el metodo");
        Grafo.Lista.goToPos(0);
        NodoGrafo Prueba = (NodoGrafo) GrafoNuevo.Lista.getElement();
        NodoGrafo Prueba2;
        Direcciones Prueba3 = (Direcciones) Prueba.Dato;
        System.out.println("Nodo: " + Prueba3.codigo);
        int r = 0;
        while(r < Prueba.Relaciones.size()){
            Prueba2 = (NodoGrafo) Prueba.Relaciones.getElement();
            System.out.println("Nodo con los que se relaciona 1: " + Prueba2.Dato);
            System.out.println("Se recorre el while por "+r+" vez");
            r++;
            Prueba.Relaciones.next();
        }
        System.out.println("Se sale del while");
    }//GEN-LAST:event_Cargar_MapaActionPerformed

    private void ACEPTARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACEPTARActionPerformed
        // TODO add your handling code here:
        Pprincipal Admi = new Pprincipal();
        int i = Integer.valueOf(CantidadRepartidores.getText());
        int j=0;
        while(j<i){
            Repartidor repart = new Repartidor();
            Admi.RepartidoresLista.addItem("Repartidor "+(j+1));
            Admi.Repartidores.add(repart);
            j++;
        }
        
        Admi.repartidores=Integer.valueOf(CantidadRepartidores.getText());
                
        int cont=0;
        int crece = Integer.valueOf(CantidadRepartidores.getText());
        
        
        
        Admi.setVisible(true);
        //**************************************************CRONOMETRO
        Admi.t.start();
        Admi.sF = (int) Integer.valueOf(Tiempo.getText());
        Admi.s = 0;
        Admi.cs = 0;
        Admi.actualizarLabel();
        Admi.tiempo = (int) Integer.valueOf(Tiempo.getText());

        
        
        this.hide();
    }//GEN-LAST:event_ACEPTARActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Configuracion().setVisible(true);
            }
        });
    }

    private static final FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos TXT", "txt");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ACEPTAR;
    private javax.swing.JButton CANCELAR;
    private javax.swing.JTextField CantidadRepartidores;
    private javax.swing.JButton Cargar_Mapa;
    private javax.swing.JTextField PedidosRepartidor;
    private javax.swing.JTextField Tiempo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
